# This file was originally generated by PyScripter's unitest wizard

import unittest
import os
from configengine import xwalk_from_raw_config
import xlrd
import fixtures


class TestRawConfigIterator(unittest.TestCase):

    def setUp(self):
        pass

    def tearDown(self):
        pass

    @unittest.skip("not implenemted")
    def test__iter__(self):
        pass

    @unittest.skip("not implenemted")
    def test_next(self):
        pass


class TestConfigXWalk(unittest.TestCase):

    def setUp(self):
        pass

    def tearDown(self):
        pass

    @unittest.skip("not implemented")
    def test_init_db_tables(self):
        pass

    @unittest.skip("not implemented")
    def test_populate_config_table(self):
        pass

    @unittest.skip("not implemented")
    def test_populate_scratch_table(self):
        pass

    @unittest.skip("not implemented")
    def test_populate_shpfile_table(self):
        pass

    @unittest.skip("not implemented")
    def test_init_db_funcs(self):
        pass

    @unittest.skip("not implemented")
    def testgetXWalk(self):
        pass


class TestGlobalFunctions(unittest.TestCase):

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test_xwalk_from_raw_config(self):
        """
        This is just an intergration test for the whole of the configengine module
        :return:
        """
        result = xwalk_from_raw_config(fixtures.rawconf_good, "wrl", "su")
        # print type(result)
        self.assertIsInstance(result, list)


if __name__ == '__main__':
    unittest.main()
