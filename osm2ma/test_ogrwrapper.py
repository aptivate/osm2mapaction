# This file was originally generated by PyScripter's unit test wizard

import unittest
import tempfile
import shutil
import os
import ogrwrapper as ogrw
from osgeo import ogr
from osgeo import osr
from configengine import xwalk_from_raw_config
import fixtures


class TestGlobalFunctions(unittest.TestCase):

    def setUp(self):
        self.tmpdir = tempfile.mkdtemp()

    def tearDown(self):
        shutil.rmtree(self.tmpdir, ignore_errors=True)

    def test_medium_create_datacat_dir(self):
        test_data_cat = "test_data_cat"
        # test trying to create shpfile twice (shouldn't error)
        for x in range(0, 2):
            created_path = ogrw._create_datacat_dir(self.tmpdir, test_data_cat)
            self.assertEqual(created_path, os.path.join(self.tmpdir, test_data_cat))
            self.assertTrue(os.path.exists(created_path))

    def test_medium_create_new_shpfile(self):
        test_shpfile = "test_shpfile"
        dest_srs = osr.SpatialReference()
        dest_srs.ImportFromEPSG(3857)     # from EPSG

        # test trying to create shpfile twice (shouldn't error)
        for x in range(0, 2):
            ogrw._create_new_shpfile(test_shpfile+".shp", self.tmpdir, ogr.wkbLineString, dest_srs)
            for extn in (u'.dbf', u'.prj', u'.shp', u'.shx'):
                self.assertTrue(os.path.exists(os.path.join(self.tmpdir, test_shpfile + extn)))

    def testget_short_geom_details(self):
        source_layer, dest_geom = ogrw.get_geom_details("pt")
        self.assertEqual(source_layer, "points")
        self.assertEqual(dest_geom, ogr.wkbPoint)

        source_layer, dest_geom = ogrw.get_geom_details("ln")
        self.assertEqual(source_layer, "lines")
        self.assertEqual(dest_geom, ogr.wkbLineString)

        source_layer, dest_geom = ogrw.get_geom_details("py")
        self.assertEqual(source_layer, "multipolygons")
        self.assertEqual(dest_geom, ogr.wkbMultiPolygon)

        source_layer, dest_geom = ogrw.get_geom_details("rel")
        self.assertEqual(source_layer, "other_relations")
        self.assertEqual(dest_geom, ogr.wkbUnknown)

        # Test an invalid geometry type value.
        self.assertRaises(ValueError, ogrw.get_geom_details, "abcde")

    def test_long_batch_convert(self):
        xwalk = xwalk_from_raw_config(fixtures.rawconf_good, 'wrl', 'su')
        ogrw.batch_convert(xwalk, fixtures.example_pbf, self.tmpdir)
        result_dir_listing = []
        for root, dirs, files in os.walk(self.tmpdir):
            dirs = sorted(dirs, reverse=False)
            files = sorted(files, reverse=False)
            result_dir_listing.append([os.path.relpath(root, self.tmpdir), dirs, files])
        self.assertEqual(result_dir_listing, fixtures.output_dir_listing)
